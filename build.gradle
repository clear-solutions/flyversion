buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "io.freefair.gradle:lombok-plugin:5.3.0"
	}
}

apply plugin: "io.freefair.lombok"
apply plugin: "java"

group = 'com.clearsolutions'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation(platform('org.junit:junit-bom:5.7.0'))
	testImplementation('org.junit.jupiter:junit-jupiter')
}

test {
	useJUnitPlatform()
}

task testWatcher(type: TestWatcher) {
	testLogging {
		showStandardStreams = true
	}
}

class TestWatcher extends Test {

	@TaskAction
	void executeTests(IncrementalTaskInputs inputs) {
		if (inputs.incremental) {
			def outputDir = this.project.sourceSets['test'].output.classesDir.absolutePath
			this.filter.includePatterns = []
			inputs.outOfDate { InputFileDetails change ->
				def candidate = change.file.absolutePath
				if (candidate.endsWith('.class')) {
					candidate = candidate
							.replace('.class', '')
							.replace(outputDir, '')
							.substring(1)
							.replace(File.separator, '.')
					this.filter.includePatterns += candidate
				}
			}
		}
		super.executeTests()
	}
}
